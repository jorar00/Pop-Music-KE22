PREFIX fx: <http://sparql.xyz/facade-x/ns/>
PREFIX xyz: <http://sparql.xyz/facade-x/data/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org./2000/01/rdf-schema#>
PREFIX pm: <https://raw.githubusercontent.com/jorge-arranz/Pop-Music-KE22/main/Ontology/popMusic.owl> 


CONSTRUCT {
     ?RecordingMyNS a pm:Recording;
        pm:hasTitle ?recordingTitle;
        pm:hasLength ?recordingLength;
        pm:hasDisambiguation ?recordingDisambiguation;
        pm:hasAnnotatiton ?recordingAnotation;
        pm:hasRate ?recordingRate ;
        pm:hasPlace ?recordingPlace ;
        pm:hasDate ?recordingDate ;
        pm:hasCreditArtist ?BandMyNS;
        pm:isPlayedBy ?MusicianMyNS .

    ?MusicianMyNS rdfs:subClassOf pm:Artist;
        a pm:Musician;
        pm:hasName ?nameMusician;
        pm:hasBeginDate ?BeginMusician;
        pm:hasEndDate ?EndMusician .

    ?BandMyNS rdfs:subClassOf pm:Artist;
        a pm:Band;
        pm:hasName ?nameBand .
    
}WHERE{
    SERVICE <x-sparql-anything:> {
        fx:properties fx:location "https://raw.githubusercontent.com/jorge-arranz/Pop-Music-KE22/main/Data/Input/Queen/Recording/recording_471dc436-80be-4f06-bc8f-7e2685876cfc.json" .

            ?root rdf:type fx:root;
                xyz:recording ?recording_NS.
            ?recording_NS xyz:id ?recordingID.
        BIND(fx:entity (pm:,"resource/Recording/", ?recordingID) as ?RecordingMyNS) .


        OPTIONAL{?recording_NS xyz:title ?recordingTitle .}
        OPTIONAL{?recording_NS xyz:length ?recordingLength .}
        OPTIONAL{?recording_NS xyz:disambiguation ?recordingDisambiguation .}
        OPTIONAL{?recording_NS xyz:anotation ?anotation .}
        OPTIONAL{?anotation xyz:text ?recordingAnotation .}
        OPTIONAL{?recording_NS xyz:rating ?rate .}
        OPTIONAL{?rate xyz:rating ?recordingRate .}
        OPTIONAL{?recoridng_NS xyz:place-relation-list/fx:anySlot ?place_list.}
        OPTIONAL{?place_list xyz:type ?type . }
        OPTIONAL{FILTER(?type="recorded at").}
        OPTIONAL{?place_list xyz:begin ?recordingDate .}
        OPTIONAL{?place_list xyz:place ?place .}
        OPTIONAL{?place xyz:name ?recordingPlace .}

        OPTIONAL{?recording_NS xyz:artist-credit/fx:anySlot ?Artist_Credit .}
        OPTIONAL{?Artists_Credit xyz:artist ?Band .}
        ?Band xyz:type "Group" .
        OPTIONAL{?Band xyz:id ?BandID .}
        OPTIONAL{?Band xyz:name ?nameBand .}
        BIND(fx:entity (pm:,"resource/Band/", ?BandID) as ?BandMyNS) .

        OPTIONAL{?recording_NS xyz:artist-relation-list/fx:anySlot ?Artist .}
        OPTIONAL{?Artist xyz:begin ?BeginMusician .}
        OPTIONAL{?Artist xyz:end ?EndMusician .}
        OPTIONAL{?Artist xyz:artist ?Musician .}
        ?Musician xyz:type "Person" .
        OPTIONAL{?Musician xyz:id ?MusicianID .}
        OPTIONAL{?Musician xyz:name ?nameMusician .}
        BIND(fx:entity (pm:,"resource/Musician/", ?MusicianID) as ?MusicianMyNS) .


    }
   
}
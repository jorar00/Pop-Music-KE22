PREFIX fx: <http://sparql.xyz/facade-x/ns/>
PREFIX xyz: <http://sparql.xyz/facade-x/data/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org./2000/01/rdf-schema#>
PREFIX pm: <https://raw.githubusercontent.com/jorge-arranz/Pop-Music-KE22/main/Ontology/popMusic.owl> 


CONSTRUCT {

    ?BandMyNS rdfs:subClassOf pm:Artist;
        a pm:Band;
        pm:hasName ?nameBand;
        pm:hasPlace ?countryBand;
        pm:hasBeginDate ?beginDateBand;
        pm:hasEndDate ?endDateBand;
        pm:containsMusician ?MusicianMyNS;
        pm:hasRate ?rateBand .
        

    ?MusicianMyNS rdfs:subClassOf pm:Artist;
        a pm:Musician;
        pm:hasName ?nameMusician;
        pm:hasBeginDate ?BeginMusician;
        pm:hasEndDate ?EndMusician;
        pm:hasAttribute ?attributesMusician ;
        pm:hasRole ?roleMusician .
        

}WHERE{
    SERVICE <x-sparql-anything:>{
        fx:properties fx:location "https://raw.githubusercontent.com/jorge-arranz/Pop-Music-KE22/main/Data/Input/Queen/Artist/artist_d4009c09-a339-4b89-bc45-d91ab649acb6_1.json" .

        ?root rdf:type fx:root;
            xyz:artist ?Band_NS.
        ?Band_NS xyz:type "Group" .
        ?Band_NS xyz:id ?bandID.
        BIND(fx:entity (pm:,"resource/Band/", ?bandID)  as ?BandMyNS) .
        OPTIONAL{?Band_NS xyz:name ?nameBand .}
        OPTIONAL{?Band_NS xyz:country ?countryBand .}
        OPTIONAL{?Band_NS xyz:life-span ?lifeBand .}
        OPTIONAL{?lifeBand xyz:begin ?beginDateBand .}
        OPTIONAL{?lifeBand xyz:end ?endDateBand .}
        OPTIONAL{?Band_NS xyz:rating ?rate .}
        OPTIONAL{?rate xyz:rating ?rateBand .}

        ?Band_NS xyz:artist-relation-list/fx:anySlot ?Musician_NS .
        ?Musician_NS xyz:artist ?Artist .       
        ?Artist xyz:type "Person" .
        ?Artist xyz:id ?musicianID .
        BIND(fx:entity (pm:,"resource/Musician/", ?musicianID)  as ?MusicianMyNS) .
        OPTIONAL{?Musician_NS xyz:begin ?BeginMusician .}
        OPTIONAL{?Musician_NS xyz:type ?roleMusician .}
        OPTIONAL{?Musician_NS xyz:end ?EndMusician .}
        OPTIONAL{?Musician_NS xyz:artist ?Artist .}
        OPTIONAL{?Artist xyz:name ?nameMusician .}
        OPTIONAL{?Musician_NS xyz:attributes/fx:anySlot ?Attribute .}
        OPTIONAL{?Attribute xyz:attribute ?attributesMusician .}


        
        
        }

}
   
